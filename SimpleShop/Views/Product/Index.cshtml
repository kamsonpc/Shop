@model SimpleShop.Models.ViewsModels.ProductPageVM
@using PagedList.Mvc;

@{
	ViewBag.Title = "Index";
}

@using (Html.BeginForm("Index", "Product", FormMethod.Get))
{

	<div class="row">
		<div class="input-field col s4 offset-s4">
			<i class="material-icons prefix">search</i>
			<input id="search" type="text" name="Search.Name" class="validate">
			<label for="search">Search</label>
		</div>
	</div>
	<div class="row">
		<input type="hidden" name="categoryId" value="@ViewBag.CategoryId" />
		<br />
		<br />
		<div class="col s3 left-bar">
			<div class="collection">
				<a class="collection-item" href="@Url.Action("Index", "Product")">Wszystko</a>
				@foreach (var item in Model.Categories)
				{
					<a class="collection-item" href="@Url.Action("Index", "Product", new {categoryId = item.CategoryId})">@item.Name</a>
				}

			</div>
			<div class="row">
				<div class="input-field col s12">
					<i class="material-icons prefix">monetization_on</i>
					@Html.TextBoxFor(model => model.Search.PriceFrom)
					@Html.LabelFor(model => model.Search.PriceFrom)
				</div>

				<div class="input-field col s12">
					<i class="material-icons prefix">monetization_on</i>
					@Html.TextBoxFor(model => model.Search.PriceTo)
					@Html.LabelFor(model => model.Search.PriceTo)
				</div>
			</div>
			<div class="row">
				<div>
					<a class="waves-effect waves-light btn right"><i class="material-icons right">search</i>Filtr</a>

				</div>
			</div>

		</div>
		<div class="col s9">
			<div class="row">
				@foreach (var item in Model.Product)
				{
					<div class="col s12 m4">

						<div class="card sticky-action hoverable">
							<div class="card-image waves-effect waves-block waves-light">

								<img class="activator" src="@Url.Content("~/UploadedFiles/" + @item.Img)">

							</div>
							<div class="card-content">
								<span class="card-title activator grey-text text-darken-4">
									@item.Name<i class="material-icons right">more_vert</i>
								</span>
								<p>
									<b>$ @item.Price</b>
								</p>

							</div>
							<div class="card-action">
								<a class="waves-effect waves-light btn-small" href="@Url.Action("Details", "Product", new {id = item.ProductId})"><i class="material-icons right">arrow_forward</i>Details</a>
										@if (Request.IsAuthenticated && User.IsInRole("Administrator"))
										{
											<div class="divider"></div>
											<a class="waves-effect waves-light btn-small" href="@Url.Action("Edit", "Product", new {id = item.ProductId})"><i class="glyphicon glyphicon-pencil"></i></a>
											<a class="waves-effect waves-light btn-small" href="@Url.Action("Delete", "Product", new {id = item.ProductId})"><i class="glyphicon glyphicon-trash"></i></a>
										}
							</div>

							<div class="card-reveal">
								<span class="card-title grey-text text-darken-4">@item.Name<i class="material-icons right">close</i></span>
								<p>
									@item.Description
								</p>
							</div>
						</div>
					</div>
				}
			</div>

			@if (Request.IsAuthenticated && User.IsInRole("Administrator"))
			{
				<a class="btn btn-success" href="@Url.Action("Create", "Product")"> <i class="glyphicon glyphicon-plus"></i> Dodaj</a>

			}
			<br />
			@Html.PagedListPager(Model.Product, page => Url.Action("Index", new { page, categoryId = ViewBag.CategoryId, name = ViewBag.Search.Name, pricefrom = ViewBag.Search.PriceFrom, priceto = ViewBag.Search.PriceTo }))
		</div>

	</div>

}




